version: '3.4'

# note: you must have a file called "sanctuary.db" in src/.local_data
# it can be completely blank initially
services:
  sanctuary.gateway:
    image: ${DOCKER_REGISTRY-}sanctuarygateway
    build:
      context: .
      dockerfile: Sanctuary.Gateway/Dockerfile
    restart: unless-stopped
    ports:
      - "20260:20260/udp"
    volumes: &common-volumes
      - logs:/app/Logs
      - ./Resources:/app/Resources
      - ./.local_data:/data
    environment: &common-env
      - Database__Provider=0 # MySQL
      - Database__VersionString=8.0.40
      - Database__ConnectionString=server=sanctuary.db;uid=chatty;pwd=freerealms;database=sanctuary;
      - Server__LoginGatewayAddress=sanctuary.login:20041
    depends_on:
      sanctuary.login:
        condition: service_started
      sanctuary.db:
        condition: service_healthy

  sanctuary.login:
    image: ${DOCKER_REGISTRY-}sanctuarylogin
    build:
      context: .
      dockerfile: Sanctuary.Login/Dockerfile
    restart: unless-stopped
    ports:
      - "20041:20041/udp"
      - "20042:20042/udp"
    volumes: *common-volumes
    environment: *common-env
    depends_on:
      sanctuary.db:
        condition: service_healthy

  sanctuary.db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: sanctuary
      MYSQL_USER: chatty
      MYSQL_PASSWORD: freerealms
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

volumes:
  logs:
  mysql_data:
